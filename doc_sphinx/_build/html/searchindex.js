Search.setIndex({"docnames": ["apidocs", "cplddocs", "index", "toolsdocs", "webserverdocs"], "filenames": ["apidocs.rst", "cplddocs.rst", "index.rst", "toolsdocs.rst", "webserverdocs.rst"], "titles": ["Subrack management API Documentation", "CPLD Management API Documentation", "Welcome to Subrack Management API\u2019s documentation!", "Subrack Tools Documentation", "Web Server Documentation"], "terms": {"except": 0, "backplan": [0, 4], "backplaneinvalidparamet": [0, 2], "class": [0, 1, 4], "invalid": 0, "paramet": [0, 1, 3, 4], "provid": [0, 1, 3], "function": [0, 1], "method": [0, 4], "twos_comp": [0, 2], "val": 0, "bit": [0, 1, 4], "comput": 0, "two": [0, 4], "": [0, 4], "complement": 0, "an": [0, 1, 4], "integ": [0, 1, 4], "valu": [0, 1, 4], "int": [0, 1, 3, 4], "The": [0, 1, 3, 4], "number": [0, 1, 4], "repres": [0, 1, 4], "return": [0, 1, 3, 4], "input": [0, 1], "type": [0, 1, 3, 4], "kwarg": [0, 1], "instanc": [0, 1, 4], "checkload": [0, 1], "check": [0, 1, 4], "regist": [0, 1], "ar": [0, 1, 4], "load": [0, 1], "rais": [0, 1, 3], "nameerror": [0, 1], "If": [0, 1, 3, 4], "board": [0, 1, 4], "i": [0, 1, 3, 4], "connect": [0, 1], "disconnect": [0, 1], "from": [0, 1, 4], "network": [0, 1], "thi": [0, 1, 3, 4], "close": [0, 1], "set": [0, 1, 4], "state": [0, 1, 3], "unconnect": [0, 1], "none": [0, 1, 4], "find_regist": [0, 1], "register_nam": [0, 1], "displai": [0, 1], "fals": [0, 1, 4], "find": [0, 1], "inform": [0, 1], "search": [0, 1, 2], "string": [0, 1, 4], "param": [0, 1, 4], "regular": [0, 1], "express": [0, 1], "against": [0, 1], "true": [0, 1, 4], "output": [0, 1], "result": [0, 1, 4], "consol": [0, 1], "list": [0, 1, 4], "found": [0, 1], "find_register_nam": [0, 1], "name": [0, 1, 3, 4], "str": [0, 1, 3, 4], "bool": [0, 1, 4], "option": [0, 1, 3, 4], "default": [0, 1], "get_bio": [0, 1], "gener": [0, 1], "bio": [0, 1], "base": [0, 1, 3, 4], "specif": [0, 1, 4], "get_board": [0, 1], "ext_info_offset": [0, 1], "16": [0, 1], "get": [0, 1, 3, 4], "extend": [0, 1], "info": [0, 1, 4], "offset": [0, 1], "0x10": [0, 1], "extract": [0, 1], "field": [0, 1, 4], "doesn": [0, 1], "t": [0, 1], "exist": [0, 1], "get_board_info": [0, 1], "retriev": [0, 1, 4], "about": [0, 1, 4], "dictionari": [0, 1, 4], "dict": [0, 1, 4], "get_extended_info": [0, 1], "get_mac": [0, 1], "mac": [0, 1], "address": [0, 1, 3, 4], "format": [0, 1, 4], "get_register_name_by_address": [0, 1], "add": [0, 1, 4], "unknown": [0, 1], "get_xml_from_board": [0, 1], "xml_map_offset": [0, 1], "xml": [0, 1], "data": [0, 1], "list_register_nam": [0, 1], "load_firmware_block": [0, 1], "devic": [0, 1, 3, 4], "path_to_xml_fil": [0, 1], "8": [0, 1, 3, 4], "firmwar": [0, 1], "block": [0, 1, 4], "pll_calib": [0, 1], "calibr": [0, 1], "pll": [0, 1, 4], "perform": [0, 1], "write": [0, 1, 4], "spi": [0, 1], "pll_dumpcfg": [0, 1], "cfg_filenam": [0, 1], "dump": [0, 1], "configur": [0, 1], "file": [0, 1, 3], "path": [0, 1], "pll_ioupdat": [0, 1], "updat": [0, 1], "io": [0, 1], "pll_ldcfg": [0, 1], "pll_read_with_upd": [0, 1], "read": [0, 1, 4], "pll_write_with_upd": [0, 1], "read_regist": [0, 1], "n": [0, 1, 3], "1": [0, 1, 3, 4], "0": [0, 1, 4], "word": [0, 1], "memori": [0, 1], "node": [0, 1], "can": [0, 1, 4], "explicitli": [0, 1], "specifi": [0, 1, 4], "read_spi": [0, 1], "write_regist": [0, 1], "write_spi": [0, 1], "filter_list_by_level": [0, 1, 2], "reg_name_list": [0, 1], "reg_nam": [0, 1], "filter": [0, 1], "level": [0, 1], "format_num": [0, 1, 2], "num": [0, 1], "convert": [0, 1, 4], "get_max_width": [0, 1, 2], "table1": [0, 1], "index1": [0, 1], "maximum": [0, 1, 4], "width": [0, 1], "given": [0, 1], "column": [0, 1], "index": [0, 1, 2, 4], "get_shift_from_mask": [0, 1, 2], "mask": [0, 1], "shift": [0, 1], "hexstring2ascii": [0, 1, 2], "hexstr": [0, 1], "xor": [0, 1], "ascii": [0, 1], "hex": [0, 1], "pprint_tabl": [0, 1, 2], "tabl": [0, 1], "print": [0, 1], "out": [0, 1], "pad": [0, 1], "align": [0, 1], "A": [0, 1, 4], "each": [0, 1, 4], "row": [0, 1], "must": [0, 1, 4], "have": [0, 1], "same": [0, 1], "subrack_management_board": 0, "adu_eth_p": [0, 2], "ip": [0, 1, 4], "count": 0, "interv": 0, "2": [0, 1, 4], "size": [0, 1], "wait": [0, 1, 4], "ping": 0, "subrackexecfault": [0, 2], "defin": 0, "which": [0, 4], "occur": 0, "when": 0, "error": 0, "fail": 0, "subrackinvalidcmd": [0, 2], "command": [0, 1, 3, 4], "subrackinvalidparamet": [0, 2], "subrackmngboard": [0, 2, 4], "implement": [0, 4], "monitor": [0, 1, 4], "getcpldlockedpl": 0, "statu": [0, 1, 4], "cpld": [0, 2, 4], "intern": [0, 4], "lock": [0, 4], "getfanalarm": 0, "fan": [0, 4], "alarm": [0, 4], "ok": 0, "warn": [0, 4], "getfanmod": 0, "fan_id": 0, "the_bkpln_fan_mod": 0, "id": [0, 1, 4], "select": [0, 1, 3], "accept": 0, "4": [0, 1, 4], "auto_mod": 0, "mode": [0, 1, 4], "auto": [0, 4], "manual": [0, 4], "oper": [0, 1], "getfanpwm": 0, "pwm": 0, "puls": 0, "modul": [0, 1, 2, 3], "percentag": [0, 4], "queri": [0, 4], "speed": [0, 4], "identifi": [0, 1], "getfanrpm": 0, "rpm": [0, 4], "revolut": 0, "per": 0, "minut": 0, "getfanspe": 0, "get_bkpln_fan_spe": 0, "fanrpm": 0, "fan_bank_pwm": 0, "getlockedpl": 0, "getpsfanspe": 0, "ps_id": 0, "power": [0, 3, 4], "suppli": [0, 4], "fanspe": [0, 2, 4], "getpsiout": 0, "iout": 0, "current": [0, 4], "vout": 0, "amper": 0, "getpspow": 0, "consumpt": 0, "w": [0, 4], "getpsvout": 0, "voltag": [0, 4], "volt": 0, "getpingcpld": 0, "us": [0, 1, 3, 4], "reachabl": 0, "via": 0, "otherwis": [0, 4], "getpingtpm": 0, "tpm_slot_id": 0, "tpm": [0, 1, 3, 4], "slot": [0, 4], "present": [0, 4], "respond": 0, "unreach": 0, "getpllsourc": 0, "phase": 0, "loop": 0, "sourc": 0, "interfac": [0, 3], "extern": 0, "getpoweralarm": 0, "vector": [0, 4], "alm": 0, "getsubracktemperatur": 0, "temperatur": [0, 4], "sensor": 0, "place": 0, "temp_mng1": 0, "temp_mng2": 0, "temp_bck1": 0, "temp_bck2": 0, "gettpmcurr": 0, "forc": 0, "consuptin": 0, "even": 0, "gettpmglobalstatusalarm": 0, "forceread": 0, "deprec": 0, "global": 0, "indic": [0, 1, 4], "longer": 0, "access": [0, 1, 4], "gettpmip": 0, "volatil": 0, "local": 0, "tpm_ip_str": 0, "gettpminfo": 0, "gettpmmcutemperatur": 0, "mcu": [0, 1, 4], "gettpmonoffvect": 0, "On": [0, 4], "insert": 0, "off": [0, 3, 4], "poweron": 0, "7": 0, "gettpmpow": 0, "gettpmpres": 0, "brief": 0, "tpmdetect": 0, "posit": 0, "detect": 0, "gettpmsupplyfault": 0, "fault": [0, 4], "tpmsupplyfault": [0, 2, 4], "gettpmtemperatur": 0, "gettpmvoltag": 0, "gettpm_add_list": 0, "assign": [0, 4], "getupsstatu": 0, "uninterrupt": 0, "up": [0, 4], "serial": 0, "port": [0, 1], "charg": [0, 4], "adc": 0, "analog": 0, "digit": 0, "It": [0, 3, 4], "also": 0, "condit": 0, "contain": [0, 1, 4], "includ": 0, "getvoltagealarm": 0, "get_api_vers": 0, "version": [0, 4], "get_subrack_timet": 0, "time": [0, 4], "timestamp": [0, 4], "get_tpm_temperature_vector": 0, "get_tpm_alarms_vector": 0, "initi": [0, 1, 4], "pll_source_intern": 0, "plliniti": 0, "source_intern": 0, "pll_cfg_file": 0, "powerofftpm": 0, "setfanmod": [0, 2, 4], "fan_id_blk": 0, "cuopl": 0, "3": [0, 1], "control": [0, 1, 3, 4], "setfanspe": [0, 2, 4], "note": [0, 3], "coupl": 0, "pass": 0, "fan_blk_id": 0, "both": 0, "speed_pwm_perc": 0, "the_bkpln_fan_spe": 0, "min": 0, "max": 0, "100": [0, 4], "possibl": 0, "onli": [0, 4], "setpsfanspe": [0, 2, 4], "speed_perc": 0, "percentu": 0, "settpmip": 0, "netmask": 0, "gatewai": 0, "bypass_check": 0, "timeout": [0, 1], "setupsvoltagealarmthreshold": 0, "alarm_level": 0, "threshold": 0, "consid": 0, "presenc": [0, 4], "encount": 0, "dure": [0, 1], "setupsvoltagewarningthreshold": 0, "warning_level": 0, "subrackinitialconfigur": 0, "initizl": 0, "limit": 0, "all_monitoring_categori": 0, "all": [0, 1, 3, 4], "point": [0, 4], "categori": 0, "here": 0, "super": 0, "full": 0, "set_monitoring_point_attr": 0, "all_monitoring_point": 0, "leaf": 0, "lookup": 0, "correspond": [0, 4], "produc": 0, "delimit": 0, "kei": 0, "bkpln_get_field": 0, "backup": 0, "locat": 0, "bkpln": 0, "deleg": 0, "task": 0, "bkpln_set_field": 0, "override_protect": 0, "allow": 0, "overrid": [0, 4], "protect": 0, "get_health_dict": 0, "static": 0, "get_health_statu": 0, "group": [0, 4], "argument": 0, "For": 0, "exampl": [0, 3], "would": 0, "health": [0, 4], "attribut": [0, 1, 4], "see": 0, "subrack_monitoring_point_lookup": 0, "py": [0, 3], "like": 0, "below": 0, "get_health_status_w_elaps": 0, "get_subrack_cpu_cpld_ip": 0, "cpu_ip": 0, "cpld_ip": 0, "cpu": 0, "read_tpm_singlewir": 0, "tpm_id": [0, 4], "singl": [0, 1, 4], "wire": [0, 1], "psnt_mux": 0, "write_tpm_singlewir": 0, "written": [0, 1, 4], "detect_ip": [0, 2], "its": [0, 4], "dt_to_timestamp": [0, 2], "d": 0, "datetim": 0, "object": [0, 1, 4], "unix": 0, "exec_cmd": [0, 2], "cmd": [0, 1], "dir": 0, "verbos": 0, "exclude_lin": 0, "execut": [0, 4], "shell": 0, "captur": 0, "flatten_dict": [0, 2], "parent_kei": 0, "sep": 0, "_": 0, "flatten": 0, "nest": 0, "int2ip": [0, 1, 2], "ipstr2hex": [0, 2], "hexadecim": 0, "represent": [0, 1], "reduc": [0, 2], "iter": 0, "appli": 0, "cumul": 0, "item": 0, "sequenc": 0, "left": 0, "right": 0, "so": 0, "lambda": 0, "x": 0, "y": 0, "5": 0, "calcul": 0, "befor": 0, "serv": 0, "empti": 0, "partial": [0, 2], "func": 0, "arg": [0, 4], "keyword": 0, "new": 0, "applic": 0, "config_ip": 1, "get_mac_from_eep": [1, 2], "inst": 1, "phy_addr": 1, "160": 1, "eeprom": 1, "bsp": 1, "physic": [1, 4], "0xa0": 1, "nuple2mac": [1, 2], "tupl": 1, "read_str": [1, 2], "max_len": 1, "32": 1, "start": [1, 4], "length": 1, "write_str": [1, 2], "cpld2mcu_serial_ctrl_2": 1, "flashcmd": [1, 2], "flash": 1, "relat": [1, 4], "constant": 1, "load_bitstream": [1, 2], "filenam": 1, "pages": 1, "bitstream": 1, "page": [1, 2], "total": [1, 4], "mcu_upd": 1, "loadbitstream": [1, 2], "bytearrai": 1, "test": 1, "script": [1, 3], "__author__": 1, "bub": 1, "phy_marvell_88x2222_init": 1, "cfg_10g": [1, 2], "mdio_mux": 1, "10g": 1, "mdio": 1, "multiplex": 1, "decode_regist": [1, 2], "reg_def": 1, "reg_valu": 1, "decod": 1, "definit": 1, "get_port_cfg": [1, 2], "get_switch_statu": [1, 2], "variou": 1, "switch": [1, 4], "rd": [1, 2], "read22": [1, 2], "mux": 1, "phy_adr": 1, "22": 1, "read45": [1, 2], "45": 1, "read_and_decod": [1, 2], "read_scratch": [1, 2], "scratch": 1, "within": 1, "read_wi": [1, 2], "wi": 1, "readmodifywrit": [1, 2], "modifi": 1, "set_sfp": [1, 2], "sfp": 1, "set_field": [1, 2], "field_nam": 1, "field_valu": 1, "wr": [1, 2], "write22": [1, 2], "write22_reg": [1, 2], "write45": [1, 2], "write_scratch": [1, 2], "reg": 1, "packag": [1, 4], "rmp": 1, "udp": 1, "socket": 1, "packet": 1, "encod": 1, "basic": 1, "attach": 1, "protocol": 1, "rough": 1, "minim": 1, "code": 1, "exploit": 1, "featur": 1, "management_flash": 1, "mngprogflash": [1, 2], "fpga": 1, "bitfil": 1, "storag": 1, "pointer": 1, "add4bytemod": 1, "flag": [1, 4], "whether": [1, 4], "byte": [1, 4], "enabl": 1, "deviceeras": 1, "flashdeviceindedx": 1, "eras": 1, "rang": [1, 4], "self": [1, 4], "deviceerasechip": 1, "entir": 1, "chip": 1, "devicegetid": 1, "identif": 1, "devicegetinfo": 1, "flashdevic": 1, "devicewrit": 1, "txbuff": 1, "where": [1, 4], "flashdevice_enter4byteaddmod": 1, "enter": 1, "flashdevice_exit4byteaddmod": 1, "exit": 1, "flashdevice_chiperas": 1, "flashdevice_eras": 1, "flashdevice_erasesector": 1, "sector": 1, "flashdevice_preparecommand": 1, "prepar": 1, "buffer": 1, "flashdevice_readidentif": 1, "flashdevice_readpag": 1, "flashdevice_readreg": 1, "flashdevice_readsector": 1, "flashdevice_waittillreadi": 1, "until": 1, "readi": 1, "flashdevice_writedis": 1, "disabl": 1, "flashdevice_writeen": 1, "flashdevice_writepag": 1, "flashdevice_writereg": 1, "flashdevice_writesector": 1, "spitransact": 1, "txbuffer": 1, "transact": 1, "transmit": 1, "sent": 1, "receiv": 1, "firmwareprogram": 1, "bitstreamfilenam": 1, "dumpfilenam": 1, "erase_al": 1, "erase_s": 1, "add_len": 1, "program": 1, "onto": 1, "content": 1, "prepend": 1, "firmwareread": 1, "sectors": 1, "alloc": 1, "savebitstream": 1, "memblock": 1, "bitstreams": 1, "save": 1, "spi_chipselect": 1, "isact": 1, "clear": 1, "activ": 1, "deactiv": 1, "spi_config": 1, "spi_cs_ow": 1, "One": 1, "spi_mux_select": 1, "slaveid": 1, "slave": 1, "spi_rx_avail": 1, "avail": 1, "spi_sync": 1, "synchron": 1, "commun": 1, "spi_trigg": 1, "trigger": [1, 4], "transmiss": 1, "spi_tx_remain": 1, "remain": 1, "spiregist": [1, 2], "spi_cs0": 1, "spi_tx_byt": 1, "spi_rx_byt": 1, "spi_tx_buf_len": 1, "spi_rx_buf_len": 1, "spi_fifo_addr": 1, "fifo": 1, "spi_mux": 1, "spi_rxtxbuff": 1, "management_mcu_uart": 1, "mngmcuuart": [1, 2], "cpld2mcu": 1, "uart": 1, "reset_mcu": 1, "reset": 1, "start_mcu_sam_ba_monitor": 1, "sam": 1, "ba": 1, "success": 1, "uart_receive_byt": 1, "over": 1, "uart_send_buff": 1, "databuff": 1, "send": [1, 4], "uart_send_buffer_wrx": 1, "respons": [1, 4], "uart_send_byt": 1, "dataw": 1, "web": 2, "server": 2, "getallattributescommand": [2, 4], "hardwareattribut": [2, 4], "hardwarebasedevic": [2, 4], "hardwarecommand": [2, 4], "listattributecommand": [2, 4], "listcommandcommand": [2, 4], "abortcommand": [2, 4], "iscompletedcommand": [2, 4], "threadedhardwarecommand": [2, 4], "api_vers": [2, 4], "aretpmsoncommand": [2, 4], "backplanetemperatur": [2, 4], "boardcurr": [2, 4], "boardtemperatur": [2, 4], "cpld_pll_lock": [2, 4], "fanmod": [2, 4], "fanspeedperc": [2, 4], "gethealthdict": [2, 4], "gethealthstatu": [2, 4], "istpmoncommand": [2, 4], "pscurrent": [2, 4], "psfanspe": [2, 4], "pspower": [2, 4], "psvoltag": [2, 4], "powerdowncommand": [2, 4], "powerofftpmcommand": [2, 4], "powerontpmcommand": [2, 4], "powerupcommand": [2, 4], "subrackhardwar": [2, 4], "subrack_pll_lock": [2, 4], "subrack_timestamp": [2, 4], "tpm_add_list": [2, 4], "tpm_temperature_alarm": [2, 4], "tpm_temperatur": [2, 4], "tpm_voltage_alarm": [2, 4], "tpmcurrent": [2, 4], "tpmip": [2, 4], "tpminfo": [2, 4], "tpmmcutemperatur": [2, 4], "tpmonoffvect": [2, 4], "tpmpower": [2, 4], "tpmpresent": [2, 4], "tpmvoltag": [2, 4], "byte_to_bool_arrai": [2, 4], "ups_statu": [2, 4], "myserv": [2, 4], "mangle_dict": [2, 4], "tool": 2, "usage_hexampl": [2, 3], "get_dev_add": [2, 3], "power_on_tpm": 3, "e": 3, "tpm1": 3, "tpm3": 3, "prog": 3, "t1": 3, "t3": 3, "line": 3, "trust": 3, "platform": 3, "skalab": 3, "optionpars": 3, "pars": 3, "t2": 3, "t8": 3, "individu": 3, "usag": [3, 4], "python": 3, "script_nam": 3, "replac": 3, "actual": [3, 4], "power_off_tpm": 3, "i2c_reg": 3, "devnam": 3, "i2c": 3, "systemexit": 3, "incorrect": 3, "simpl": 4, "driver": 4, "hardwar": 4, "hardwarebaseclass": 4, "action": 4, "quantiti": 4, "thei": 4, "rw": 4, "subclass": 4, "behavior": 4, "num_param": 4, "inth": 4, "do": 4, "init_valu": 4, "read_writ": 4, "scalar": 4, "fix": 4, "dimens": 4, "arbitrari": 4, "read_valu": 4, "To": 4, "real": 4, "json": 4, "answer": 4, "write_valu": 4, "side": 4, "add_attribut": 4, "hardwarebas": 4, "canb": 4, "ad": 4, "add_command": 4, "execute_command": 4, "get_attribut": 4, "set_attribut": 4, "ha": 4, "work": 4, "hardwarethreadedclass": 4, "abort": 4, "thread": 4, "specfi": 4, "run": 4, "requir": 4, "long": 4, "complet": 4, "frequent": 4, "checkpoint": 4, "_abort": 4, "stop": 4, "just": 4, "join": 4, "free": 4, "resourc": 4, "rtype": 4, "atribut": 4, "is_block": 4, "period": 4, "approx": 4, "second": 4, "between": 4, "termin": 4, "_complet": 4, "lfaa": 4, "sp": 4, "subrack": 4, "subrack_hardwar": 4, "api": 4, "celsiu": 4, "halv": 4, "float": 4, "percent": 4, "report": 4, "retvalu": 4, "_hardwar": 4, "refer": 4, "unus": 4, "multipl": 4, "cabinet": 4, "retval": 4, "emul": 4, "timrstamp": 4, "Will": 4, "Be": 4, "temepratur": 4, "tpmboard": 4, "fpga1": 4, "fpga2": 4, "rvalu": 4, "been": 4, "v": 4, "byte_in": 4, "l": 4, "logic": 4, "web_serv": 4, "request": 4, "client_address": 4, "handler": 4, "http": 4, "do_get": 4, "callback": 4, "split": 4, "numer": 4, "call": 4, "appropri": 4, "input_dict": 4, "take": 4, "getquerydict": 4, "FOr": 4, "element": 4, "keep": 4, "first": 4, "some": 4, "them": 4}, "objects": {"": [[4, 0, 0, "-", "HardwareBaseClass"], [4, 0, 0, "-", "HardwareThreadedClass"], [0, 0, 0, "-", "backplane"], [1, 0, 0, "-", "config_ip"], [1, 0, 0, "-", "cpld2mcu_serial_ctrl_2"], [3, 0, 0, "-", "fpga_i2c_reg"], [3, 0, 0, "-", "fpga_reg"], [3, 0, 0, "-", "i2c_reg"], [0, 0, 0, "-", "management"], [1, 0, 0, "-", "management_bsp"], [1, 0, 0, "-", "management_flash"], [1, 0, 0, "-", "management_mcu_uart"], [1, 0, 0, "-", "management_pll"], [1, 0, 0, "-", "management_spi"], [1, 0, 0, "-", "mcu_update"], [1, 0, 0, "-", "mng_update"], [1, 0, 0, "-", "phy_marvell_88X2222_init"], [3, 0, 0, "-", "power_off_tpm"], [3, 0, 0, "-", "power_on_tpm"], [1, 0, 0, "-", "reg"], [1, 0, 0, "-", "rmp"], [4, 0, 0, "-", "subrack_hardware"], [0, 0, 0, "-", "subrack_management_board"], [0, 0, 0, "-", "subrack_monitoring_point_lookup"], [4, 0, 0, "-", "web_server"]], "HardwareBaseClass": [[4, 1, 1, "", "GetAllAttributesCommand"], [4, 1, 1, "", "HardwareAttribute"], [4, 1, 1, "", "HardwareBaseDevice"], [4, 1, 1, "", "HardwareCommand"], [4, 1, 1, "", "ListAttributeCommand"], [4, 1, 1, "", "ListCommandCommand"]], "HardwareBaseClass.GetAllAttributesCommand": [[4, 2, 1, "", "do"]], "HardwareBaseClass.HardwareAttribute": [[4, 2, 1, "", "name"], [4, 2, 1, "", "read"], [4, 2, 1, "", "read_value"], [4, 2, 1, "", "write"], [4, 2, 1, "", "write_value"]], "HardwareBaseClass.HardwareBaseDevice": [[4, 2, 1, "", "add_attribute"], [4, 2, 1, "", "add_command"], [4, 2, 1, "", "execute_command"], [4, 2, 1, "", "get_attribute"], [4, 2, 1, "", "set_attribute"]], "HardwareBaseClass.HardwareCommand": [[4, 2, 1, "", "do"], [4, 2, 1, "", "name"]], "HardwareBaseClass.ListAttributeCommand": [[4, 2, 1, "", "do"]], "HardwareBaseClass.ListCommandCommand": [[4, 2, 1, "", "do"]], "HardwareThreadedClass": [[4, 1, 1, "", "AbortCommand"], [4, 1, 1, "", "IsCompletedCommand"], [4, 1, 1, "", "ThreadedHardwareCommand"]], "HardwareThreadedClass.AbortCommand": [[4, 2, 1, "", "do"]], "HardwareThreadedClass.IsCompletedCommand": [[4, 2, 1, "", "do"]], "HardwareThreadedClass.ThreadedHardwareCommand": [[4, 2, 1, "", "abort"], [4, 2, 1, "", "completed"], [4, 2, 1, "", "do"], [4, 2, 1, "", "is_blocking"], [4, 2, 1, "", "thread"]], "backplane": [[0, 3, 1, "", "BackplaneInvalidParameter"], [0, 4, 1, "", "twos_comp"]], "config_ip": [[1, 4, 1, "", "get_mac_from_eep"], [1, 4, 1, "", "int2ip"], [1, 4, 1, "", "nuple2mac"], [1, 4, 1, "", "read_string"], [1, 4, 1, "", "write_string"]], "cpld2mcu_serial_ctrl_2": [[1, 1, 1, "", "FlashCmd"], [1, 4, 1, "", "load_bitstream"]], "i2c_reg": [[3, 4, 1, "", "get_dev_add"]], "management": [[0, 1, 1, "", "MANAGEMENT"], [0, 4, 1, "", "filter_list_by_level"], [0, 4, 1, "", "format_num"], [0, 4, 1, "", "get_max_width"], [0, 4, 1, "", "get_shift_from_mask"], [0, 4, 1, "", "hexstring2ascii"], [0, 4, 1, "", "pprint_table"]], "management.MANAGEMENT": [[0, 2, 1, "", "checkLoad"], [0, 2, 1, "", "disconnect"], [0, 2, 1, "", "find_register"], [0, 2, 1, "", "find_register_names"], [0, 2, 1, "", "get_bios"], [0, 2, 1, "", "get_board"], [0, 2, 1, "", "get_board_info"], [0, 2, 1, "", "get_extended_info"], [0, 2, 1, "", "get_mac"], [0, 2, 1, "", "get_register_name_by_address"], [0, 2, 1, "", "get_xml_from_board"], [0, 2, 1, "", "list_register_names"], [0, 2, 1, "", "load_firmware_blocking"], [0, 2, 1, "", "pll_calib"], [0, 2, 1, "", "pll_dumpcfg"], [0, 2, 1, "", "pll_ioupdate"], [0, 2, 1, "", "pll_ldcfg"], [0, 2, 1, "", "pll_read_with_update"], [0, 2, 1, "", "pll_write_with_update"], [0, 2, 1, "", "read_register"], [0, 2, 1, "", "read_spi"], [0, 2, 1, "", "write_register"], [0, 2, 1, "", "write_spi"]], "management_flash": [[1, 1, 1, "", "MngProgFlash"], [1, 1, 1, "", "spiregisters"]], "management_flash.MngProgFlash": [[1, 2, 1, "", "DeviceErase"], [1, 2, 1, "", "DeviceEraseChip"], [1, 2, 1, "", "DeviceGetID"], [1, 2, 1, "", "DeviceGetInfo"], [1, 2, 1, "", "DeviceWrite"], [1, 2, 1, "", "FlashDevice_Enter4byteAddMode"], [1, 2, 1, "", "FlashDevice_Exit4byteAddMode"], [1, 2, 1, "", "FlashDevice_chiperase"], [1, 2, 1, "", "FlashDevice_erase"], [1, 2, 1, "", "FlashDevice_eraseSector"], [1, 2, 1, "", "FlashDevice_prepareCommand"], [1, 2, 1, "", "FlashDevice_readIdentification"], [1, 2, 1, "", "FlashDevice_readPage"], [1, 2, 1, "", "FlashDevice_readReg"], [1, 2, 1, "", "FlashDevice_readsector"], [1, 2, 1, "", "FlashDevice_waitTillReady"], [1, 2, 1, "", "FlashDevice_writeDisable"], [1, 2, 1, "", "FlashDevice_writeEnable"], [1, 2, 1, "", "FlashDevice_writePage"], [1, 2, 1, "", "FlashDevice_writeReg"], [1, 2, 1, "", "FlashDevice_writesector"], [1, 2, 1, "", "SPITransaction"], [1, 2, 1, "", "firmwareProgram"], [1, 2, 1, "", "firmwareRead"], [1, 2, 1, "", "loadBitstream"], [1, 2, 1, "", "saveBitstream"], [1, 2, 1, "", "spi_chipselect"], [1, 2, 1, "", "spi_config"], [1, 2, 1, "", "spi_mux_selection"], [1, 2, 1, "", "spi_rx_available"], [1, 2, 1, "", "spi_sync"], [1, 2, 1, "", "spi_trigger"], [1, 2, 1, "", "spi_tx_remaining"]], "management_mcu_uart": [[1, 1, 1, "", "MngMcuUart"]], "management_mcu_uart.MngMcuUart": [[1, 2, 1, "", "reset_mcu"], [1, 2, 1, "", "start_mcu_sam_ba_monitor"], [1, 2, 1, "", "uart_receive_byte"], [1, 2, 1, "", "uart_send_buffer"], [1, 2, 1, "", "uart_send_buffer_wrx"], [1, 2, 1, "", "uart_send_byte"]], "mcu_update": [[1, 4, 1, "", "loadBitstream"]], "phy_marvell_88X2222_init": [[1, 4, 1, "", "cfg_10g"], [1, 4, 1, "", "decode_register"], [1, 4, 1, "", "get_port_cfg"], [1, 4, 1, "", "get_switch_status"], [1, 4, 1, "", "rd"], [1, 4, 1, "", "read22"], [1, 4, 1, "", "read45"], [1, 4, 1, "", "read_and_decode"], [1, 4, 1, "", "read_scratch"], [1, 4, 1, "", "read_wis"], [1, 4, 1, "", "readmodifywrite"], [1, 4, 1, "", "set_SFP"], [1, 4, 1, "", "set_field"], [1, 4, 1, "", "wr"], [1, 4, 1, "", "write22"], [1, 4, 1, "", "write22_reg"], [1, 4, 1, "", "write45"], [1, 4, 1, "", "write_scratch"]], "power_off_tpm": [[3, 5, 1, "", "usage_hexample"]], "power_on_tpm": [[3, 5, 1, "", "usage_hexample"]], "reg": [[1, 4, 1, "", "get_max_width"], [1, 4, 1, "", "pprint_table"]], "subrack_hardware": [[4, 1, 1, "", "API_Version"], [4, 1, 1, "", "AreTpmsOnCommand"], [4, 1, 1, "", "BackplaneTemperature"], [4, 1, 1, "", "BoardCurrent"], [4, 1, 1, "", "BoardTemperature"], [4, 1, 1, "", "CPLD_PLL_Locked"], [4, 1, 1, "", "FanMode"], [4, 1, 1, "", "FanSpeed"], [4, 1, 1, "", "FanSpeedPercent"], [4, 1, 1, "", "GetHealthDict"], [4, 1, 1, "", "GetHealthStatus"], [4, 1, 1, "", "IsTpmOnCommand"], [4, 1, 1, "", "PSCurrent"], [4, 1, 1, "", "PSFanSpeed"], [4, 1, 1, "", "PSPower"], [4, 1, 1, "", "PSVoltage"], [4, 1, 1, "", "PowerDownCommand"], [4, 1, 1, "", "PowerOffTpmCommand"], [4, 1, 1, "", "PowerOnTpmCommand"], [4, 1, 1, "", "PowerUpCommand"], [4, 1, 1, "", "SetFanMode"], [4, 1, 1, "", "SetFanSpeed"], [4, 1, 1, "", "SetPSFanSpeed"], [4, 1, 1, "", "SubrackHardware"], [4, 1, 1, "", "Subrack_PLL_Locked"], [4, 1, 1, "", "Subrack_Timestamp"], [4, 1, 1, "", "TPM_Add_List"], [4, 1, 1, "", "TPM_Temperature_Alarms"], [4, 1, 1, "", "TPM_Temperatures"], [4, 1, 1, "", "TPM_Voltage_Alarms"], [4, 1, 1, "", "TpmCurrents"], [4, 1, 1, "", "TpmIPs"], [4, 1, 1, "", "TpmInfo"], [4, 1, 1, "", "TpmMCUTemperatures"], [4, 1, 1, "", "TpmOnOffVect"], [4, 1, 1, "", "TpmPowers"], [4, 1, 1, "", "TpmPresent"], [4, 1, 1, "", "TpmSupplyFault"], [4, 1, 1, "", "TpmVoltages"], [4, 4, 1, "", "byte_to_bool_array"], [4, 1, 1, "", "ups_status"]], "subrack_hardware.API_Version": [[4, 2, 1, "", "read_value"]], "subrack_hardware.AreTpmsOnCommand": [[4, 2, 1, "", "do"]], "subrack_hardware.BackplaneTemperature": [[4, 2, 1, "", "read_value"]], "subrack_hardware.BoardCurrent": [[4, 2, 1, "", "read_value"]], "subrack_hardware.BoardTemperature": [[4, 2, 1, "", "read_value"]], "subrack_hardware.CPLD_PLL_Locked": [[4, 2, 1, "", "read_value"]], "subrack_hardware.FanMode": [[4, 2, 1, "", "read_value"], [4, 2, 1, "", "write_value"]], "subrack_hardware.FanSpeed": [[4, 2, 1, "", "read_value"]], "subrack_hardware.FanSpeedPercent": [[4, 2, 1, "", "read_value"]], "subrack_hardware.GetHealthDict": [[4, 2, 1, "", "do"]], "subrack_hardware.GetHealthStatus": [[4, 2, 1, "", "do"]], "subrack_hardware.IsTpmOnCommand": [[4, 2, 1, "", "do"]], "subrack_hardware.PSCurrent": [[4, 2, 1, "", "read_value"]], "subrack_hardware.PSFanSpeed": [[4, 2, 1, "", "read_value"]], "subrack_hardware.PSPower": [[4, 2, 1, "", "read_value"]], "subrack_hardware.PSVoltage": [[4, 2, 1, "", "read_value"]], "subrack_hardware.PowerDownCommand": [[4, 2, 1, "", "thread"]], "subrack_hardware.PowerOffTpmCommand": [[4, 2, 1, "", "thread"]], "subrack_hardware.PowerOnTpmCommand": [[4, 2, 1, "", "thread"]], "subrack_hardware.PowerUpCommand": [[4, 2, 1, "", "thread"]], "subrack_hardware.SetFanMode": [[4, 2, 1, "", "do"]], "subrack_hardware.SetFanSpeed": [[4, 2, 1, "", "do"]], "subrack_hardware.SetPSFanSpeed": [[4, 2, 1, "", "do"]], "subrack_hardware.SubrackHardware": [[4, 2, 1, "", "execute_command"], [4, 2, 1, "", "initialize"]], "subrack_hardware.Subrack_PLL_Locked": [[4, 2, 1, "", "read_value"]], "subrack_hardware.Subrack_Timestamp": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TPM_Add_List": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TPM_Temperature_Alarms": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TPM_Temperatures": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TPM_Voltage_Alarms": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmCurrents": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmIPs": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmInfo": [[4, 2, 1, "", "do"]], "subrack_hardware.TpmMCUTemperatures": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmOnOffVect": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmPowers": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmPresent": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmSupplyFault": [[4, 2, 1, "", "read_value"]], "subrack_hardware.TpmVoltages": [[4, 2, 1, "", "read_value"]], "subrack_hardware.ups_status": [[4, 2, 1, "", "read_value"]], "subrack_management_board": [[0, 4, 1, "", "Adu_Eth_Ping"], [0, 3, 1, "", "SubrackExecFault"], [0, 3, 1, "", "SubrackInvalidCmd"], [0, 3, 1, "", "SubrackInvalidParameter"], [0, 1, 1, "", "SubrackMngBoard"], [0, 4, 1, "", "detect_ip"], [0, 4, 1, "", "dt_to_timestamp"], [0, 4, 1, "", "exec_cmd"], [0, 4, 1, "", "flatten_dict"], [0, 4, 1, "", "int2ip"], [0, 4, 1, "", "ipstr2hex"], [0, 4, 1, "", "reduce"]], "subrack_management_board.SubrackMngBoard": [[0, 2, 1, "", "GetCPLDLockedPLL"], [0, 2, 1, "", "GetFanAlarm"], [0, 2, 1, "", "GetFanMode"], [0, 2, 1, "", "GetFanPwm"], [0, 2, 1, "", "GetFanRpm"], [0, 2, 1, "", "GetFanSpeed"], [0, 2, 1, "", "GetLockedPLL"], [0, 2, 1, "", "GetPSFanSpeed"], [0, 2, 1, "", "GetPSIout"], [0, 2, 1, "", "GetPSPower"], [0, 2, 1, "", "GetPSVout"], [0, 2, 1, "", "GetPingCpld"], [0, 2, 1, "", "GetPingTPM"], [0, 2, 1, "", "GetPllSource"], [0, 2, 1, "", "GetPowerAlarm"], [0, 2, 1, "", "GetSubrackTemperatures"], [0, 2, 1, "", "GetTPMCurrent"], [0, 2, 1, "", "GetTPMGlobalStatusAlarm"], [0, 2, 1, "", "GetTPMIP"], [0, 2, 1, "", "GetTPMInfo"], [0, 2, 1, "", "GetTPMMCUTemperature"], [0, 2, 1, "", "GetTPMOnOffVect"], [0, 2, 1, "", "GetTPMPower"], [0, 2, 1, "", "GetTPMPresent"], [0, 2, 1, "", "GetTPMSupplyFault"], [0, 2, 1, "", "GetTPMTemperatures"], [0, 2, 1, "", "GetTPMVoltage"], [0, 2, 1, "", "GetTPM_Add_List"], [0, 2, 1, "", "GetUPSStatus"], [0, 2, 1, "", "GetVoltageAlarm"], [0, 2, 1, "", "Get_API_version"], [0, 2, 1, "", "Get_Subrack_TimeTS"], [0, 2, 1, "", "Get_TPM_temperature_vector"], [0, 2, 1, "", "Get_tpm_alarms_vector"], [0, 2, 1, "", "Initialize"], [0, 2, 1, "", "PllInitialize"], [0, 2, 1, "", "PowerOffTPM"], [0, 2, 1, "", "SetFanMode"], [0, 2, 1, "", "SetFanSpeed"], [0, 2, 1, "", "SetPSFanSpeed"], [0, 2, 1, "", "SetTPMIP"], [0, 2, 1, "", "SetUPSVoltageAlarmThresholds"], [0, 2, 1, "", "SetUPSVoltageWarningThresholds"], [0, 2, 1, "", "SubrackInitialConfiguration"], [0, 2, 1, "", "all_monitoring_categories"], [0, 2, 1, "", "all_monitoring_points"], [0, 2, 1, "", "bkpln_get_field"], [0, 2, 1, "", "bkpln_set_field"], [0, 2, 1, "", "get_board_info"], [0, 2, 1, "", "get_health_dict"], [0, 2, 1, "", "get_health_status"], [0, 2, 1, "", "get_health_status_w_elapsed"], [0, 2, 1, "", "get_subrack_cpu_cpld_ip"], [0, 2, 1, "", "read_tpm_singlewire"], [0, 2, 1, "", "write_tpm_singlewire"]], "subrack_monitoring_point_lookup": [[0, 1, 1, "", "partial"]], "web_server": [[4, 1, 1, "", "MyServer"], [4, 4, 1, "", "mangle_dict"]], "web_server.MyServer": [[4, 2, 1, "", "do_GET"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"subrack": [0, 2, 3], "manag": [0, 1, 2], "api": [0, 1, 2], "document": [0, 1, 2, 3, 4], "cpld": 1, "welcom": 2, "": 2, "content": 2, "indic": 2, "tabl": 2, "tool": 3, "web": 4, "server": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Subrack management API Documentation": [[0, "module-backplane"]], "CPLD Management API Documentation": [[1, "module-config_ip"]], "Welcome to Subrack Management API\u2019s documentation!": [[2, "welcome-to-subrack-management-api-s-documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "Subrack Tools Documentation": [[3, "module-power_on_tpm"]], "Web Server Documentation": [[4, "module-HardwareBaseClass"]]}, "indexentries": {"adu_eth_ping() (in module subrack_management_board)": [[0, "subrack_management_board.Adu_Eth_Ping"]], "backplaneinvalidparameter": [[0, "backplane.BackplaneInvalidParameter"]], "getcpldlockedpll() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetCPLDLockedPLL"]], "getfanalarm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetFanAlarm"]], "getfanmode() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetFanMode"]], "getfanpwm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetFanPwm"]], "getfanrpm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetFanRpm"]], "getfanspeed() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetFanSpeed"]], "getlockedpll() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetLockedPLL"]], "getpsfanspeed() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPSFanSpeed"]], "getpsiout() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPSIout"]], "getpspower() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPSPower"]], "getpsvout() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPSVout"]], "getpingcpld() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPingCpld"]], "getpingtpm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPingTPM"]], "getpllsource() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPllSource"]], "getpoweralarm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetPowerAlarm"]], "getsubracktemperatures() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetSubrackTemperatures"]], "gettpmcurrent() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMCurrent"]], "gettpmglobalstatusalarm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMGlobalStatusAlarm"]], "gettpmip() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMIP"]], "gettpminfo() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMInfo"]], "gettpmmcutemperature() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMMCUTemperature"]], "gettpmonoffvect() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMOnOffVect"]], "gettpmpower() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMPower"]], "gettpmpresent() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMPresent"]], "gettpmsupplyfault() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMSupplyFault"]], "gettpmtemperatures() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMTemperatures"]], "gettpmvoltage() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPMVoltage"]], "gettpm_add_list() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetTPM_Add_List"]], "getupsstatus() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetUPSStatus"]], "getvoltagealarm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.GetVoltageAlarm"]], "get_api_version() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.Get_API_version"]], "get_subrack_timets() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.Get_Subrack_TimeTS"]], "get_tpm_temperature_vector() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.Get_TPM_temperature_vector"]], "get_tpm_alarms_vector() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.Get_tpm_alarms_vector"]], "initialize() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.Initialize"]], "management (class in management)": [[0, "management.MANAGEMENT"]], "pllinitialize() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.PllInitialize"]], "powerofftpm() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.PowerOffTPM"]], "setfanmode() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.SetFanMode"]], "setfanspeed() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.SetFanSpeed"]], "setpsfanspeed() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.SetPSFanSpeed"]], "settpmip() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.SetTPMIP"]], "setupsvoltagealarmthresholds() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.SetUPSVoltageAlarmThresholds"]], "setupsvoltagewarningthresholds() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.SetUPSVoltageWarningThresholds"]], "subrackexecfault": [[0, "subrack_management_board.SubrackExecFault"]], "subrackinitialconfiguration() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.SubrackInitialConfiguration"]], "subrackinvalidcmd": [[0, "subrack_management_board.SubrackInvalidCmd"]], "subrackinvalidparameter": [[0, "subrack_management_board.SubrackInvalidParameter"]], "subrackmngboard (class in subrack_management_board)": [[0, "subrack_management_board.SubrackMngBoard"]], "all_monitoring_categories() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.all_monitoring_categories"]], "all_monitoring_points() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.all_monitoring_points"]], "backplane": [[0, "module-backplane"]], "bkpln_get_field() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.bkpln_get_field"]], "bkpln_set_field() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.bkpln_set_field"]], "checkload() (management.management method)": [[0, "management.MANAGEMENT.checkLoad"]], "detect_ip() (in module subrack_management_board)": [[0, "subrack_management_board.detect_ip"]], "disconnect() (management.management method)": [[0, "management.MANAGEMENT.disconnect"]], "dt_to_timestamp() (in module subrack_management_board)": [[0, "subrack_management_board.dt_to_timestamp"]], "exec_cmd() (in module subrack_management_board)": [[0, "subrack_management_board.exec_cmd"]], "filter_list_by_level() (in module management)": [[0, "management.filter_list_by_level"]], "find_register() (management.management method)": [[0, "management.MANAGEMENT.find_register"]], "find_register_names() (management.management method)": [[0, "management.MANAGEMENT.find_register_names"]], "flatten_dict() (in module subrack_management_board)": [[0, "subrack_management_board.flatten_dict"]], "format_num() (in module management)": [[0, "management.format_num"]], "get_bios() (management.management method)": [[0, "management.MANAGEMENT.get_bios"]], "get_board() (management.management method)": [[0, "management.MANAGEMENT.get_board"]], "get_board_info() (management.management method)": [[0, "management.MANAGEMENT.get_board_info"]], "get_board_info() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.get_board_info"]], "get_extended_info() (management.management method)": [[0, "management.MANAGEMENT.get_extended_info"]], "get_health_dict() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.get_health_dict"]], "get_health_status() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.get_health_status"]], "get_health_status_w_elapsed() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.get_health_status_w_elapsed"]], "get_mac() (management.management method)": [[0, "management.MANAGEMENT.get_mac"]], "get_max_width() (in module management)": [[0, "management.get_max_width"]], "get_register_name_by_address() (management.management method)": [[0, "management.MANAGEMENT.get_register_name_by_address"]], "get_shift_from_mask() (in module management)": [[0, "management.get_shift_from_mask"]], "get_subrack_cpu_cpld_ip() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.get_subrack_cpu_cpld_ip"]], "get_xml_from_board() (management.management method)": [[0, "management.MANAGEMENT.get_xml_from_board"]], "hexstring2ascii() (in module management)": [[0, "management.hexstring2ascii"]], "int2ip() (in module subrack_management_board)": [[0, "subrack_management_board.int2ip"]], "ipstr2hex() (in module subrack_management_board)": [[0, "subrack_management_board.ipstr2hex"]], "list_register_names() (management.management method)": [[0, "management.MANAGEMENT.list_register_names"]], "load_firmware_blocking() (management.management method)": [[0, "management.MANAGEMENT.load_firmware_blocking"]], "management": [[0, "module-management"]], "module": [[0, "module-backplane"], [0, "module-management"], [0, "module-subrack_management_board"], [0, "module-subrack_monitoring_point_lookup"], [1, "module-config_ip"], [1, "module-cpld2mcu_serial_ctrl_2"], [1, "module-management_bsp"], [1, "module-management_flash"], [1, "module-management_mcu_uart"], [1, "module-management_pll"], [1, "module-management_spi"], [1, "module-mcu_update"], [1, "module-mng_update"], [1, "module-phy_marvell_88X2222_init"], [1, "module-reg"], [1, "module-rmp"], [3, "module-fpga_i2c_reg"], [3, "module-fpga_reg"], [3, "module-i2c_reg"], [3, "module-power_off_tpm"], [3, "module-power_on_tpm"], [4, "module-HardwareBaseClass"], [4, "module-HardwareThreadedClass"], [4, "module-subrack_hardware"], [4, "module-web_server"]], "partial (class in subrack_monitoring_point_lookup)": [[0, "subrack_monitoring_point_lookup.partial"]], "pll_calib() (management.management method)": [[0, "management.MANAGEMENT.pll_calib"]], "pll_dumpcfg() (management.management method)": [[0, "management.MANAGEMENT.pll_dumpcfg"]], "pll_ioupdate() (management.management method)": [[0, "management.MANAGEMENT.pll_ioupdate"]], "pll_ldcfg() (management.management method)": [[0, "management.MANAGEMENT.pll_ldcfg"]], "pll_read_with_update() (management.management method)": [[0, "management.MANAGEMENT.pll_read_with_update"]], "pll_write_with_update() (management.management method)": [[0, "management.MANAGEMENT.pll_write_with_update"]], "pprint_table() (in module management)": [[0, "management.pprint_table"]], "read_register() (management.management method)": [[0, "management.MANAGEMENT.read_register"]], "read_spi() (management.management method)": [[0, "management.MANAGEMENT.read_spi"]], "read_tpm_singlewire() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.read_tpm_singlewire"]], "reduce() (in module subrack_management_board)": [[0, "subrack_management_board.reduce"]], "subrack_management_board": [[0, "module-subrack_management_board"]], "subrack_monitoring_point_lookup": [[0, "module-subrack_monitoring_point_lookup"]], "twos_comp() (in module backplane)": [[0, "backplane.twos_comp"]], "write_register() (management.management method)": [[0, "management.MANAGEMENT.write_register"]], "write_spi() (management.management method)": [[0, "management.MANAGEMENT.write_spi"]], "write_tpm_singlewire() (subrack_management_board.subrackmngboard method)": [[0, "subrack_management_board.SubrackMngBoard.write_tpm_singlewire"]], "deviceerase() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.DeviceErase"]], "deviceerasechip() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.DeviceEraseChip"]], "devicegetid() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.DeviceGetID"]], "devicegetinfo() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.DeviceGetInfo"]], "devicewrite() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.DeviceWrite"]], "flashcmd (class in cpld2mcu_serial_ctrl_2)": [[1, "cpld2mcu_serial_ctrl_2.FlashCmd"]], "flashdevice_enter4byteaddmode() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_Enter4byteAddMode"]], "flashdevice_exit4byteaddmode() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_Exit4byteAddMode"]], "flashdevice_chiperase() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_chiperase"]], "flashdevice_erase() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_erase"]], "flashdevice_erasesector() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_eraseSector"]], "flashdevice_preparecommand() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_prepareCommand"]], "flashdevice_readidentification() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_readIdentification"]], "flashdevice_readpage() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_readPage"]], "flashdevice_readreg() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_readReg"]], "flashdevice_readsector() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_readsector"]], "flashdevice_waittillready() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_waitTillReady"]], "flashdevice_writedisable() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_writeDisable"]], "flashdevice_writeenable() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_writeEnable"]], "flashdevice_writepage() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_writePage"]], "flashdevice_writereg() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_writeReg"]], "flashdevice_writesector() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.FlashDevice_writesector"]], "mngmcuuart (class in management_mcu_uart)": [[1, "management_mcu_uart.MngMcuUart"]], "mngprogflash (class in management_flash)": [[1, "management_flash.MngProgFlash"]], "spitransaction() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.SPITransaction"]], "cfg_10g() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.cfg_10g"]], "config_ip": [[1, "module-config_ip"]], "cpld2mcu_serial_ctrl_2": [[1, "module-cpld2mcu_serial_ctrl_2"]], "decode_register() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.decode_register"]], "firmwareprogram() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.firmwareProgram"]], "firmwareread() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.firmwareRead"]], "get_mac_from_eep() (in module config_ip)": [[1, "config_ip.get_mac_from_eep"]], "get_max_width() (in module reg)": [[1, "reg.get_max_width"]], "get_port_cfg() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.get_port_cfg"]], "get_switch_status() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.get_switch_status"]], "int2ip() (in module config_ip)": [[1, "config_ip.int2ip"]], "loadbitstream() (in module mcu_update)": [[1, "mcu_update.loadBitstream"]], "loadbitstream() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.loadBitstream"]], "load_bitstream() (in module cpld2mcu_serial_ctrl_2)": [[1, "cpld2mcu_serial_ctrl_2.load_bitstream"]], "management_bsp": [[1, "module-management_bsp"]], "management_flash": [[1, "module-management_flash"]], "management_mcu_uart": [[1, "module-management_mcu_uart"]], "management_pll": [[1, "module-management_pll"]], "management_spi": [[1, "module-management_spi"]], "mcu_update": [[1, "module-mcu_update"]], "mng_update": [[1, "module-mng_update"]], "nuple2mac() (in module config_ip)": [[1, "config_ip.nuple2mac"]], "phy_marvell_88x2222_init": [[1, "module-phy_marvell_88X2222_init"]], "pprint_table() (in module reg)": [[1, "reg.pprint_table"]], "rd() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.rd"]], "read22() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.read22"]], "read45() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.read45"]], "read_and_decode() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.read_and_decode"]], "read_scratch() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.read_scratch"]], "read_string() (in module config_ip)": [[1, "config_ip.read_string"]], "read_wis() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.read_wis"]], "readmodifywrite() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.readmodifywrite"]], "reg": [[1, "module-reg"]], "reset_mcu() (management_mcu_uart.mngmcuuart method)": [[1, "management_mcu_uart.MngMcuUart.reset_mcu"]], "rmp": [[1, "module-rmp"]], "savebitstream() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.saveBitstream"]], "set_sfp() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.set_SFP"]], "set_field() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.set_field"]], "spi_chipselect() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.spi_chipselect"]], "spi_config() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.spi_config"]], "spi_mux_selection() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.spi_mux_selection"]], "spi_rx_available() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.spi_rx_available"]], "spi_sync() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.spi_sync"]], "spi_trigger() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.spi_trigger"]], "spi_tx_remaining() (management_flash.mngprogflash method)": [[1, "management_flash.MngProgFlash.spi_tx_remaining"]], "spiregisters (class in management_flash)": [[1, "management_flash.spiregisters"]], "start_mcu_sam_ba_monitor() (management_mcu_uart.mngmcuuart method)": [[1, "management_mcu_uart.MngMcuUart.start_mcu_sam_ba_monitor"]], "uart_receive_byte() (management_mcu_uart.mngmcuuart method)": [[1, "management_mcu_uart.MngMcuUart.uart_receive_byte"]], "uart_send_buffer() (management_mcu_uart.mngmcuuart method)": [[1, "management_mcu_uart.MngMcuUart.uart_send_buffer"]], "uart_send_buffer_wrx() (management_mcu_uart.mngmcuuart method)": [[1, "management_mcu_uart.MngMcuUart.uart_send_buffer_wrx"]], "uart_send_byte() (management_mcu_uart.mngmcuuart method)": [[1, "management_mcu_uart.MngMcuUart.uart_send_byte"]], "wr() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.wr"]], "write22() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.write22"]], "write22_reg() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.write22_reg"]], "write45() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.write45"]], "write_scratch() (in module phy_marvell_88x2222_init)": [[1, "phy_marvell_88X2222_init.write_scratch"]], "write_string() (in module config_ip)": [[1, "config_ip.write_string"]], "fpga_i2c_reg": [[3, "module-fpga_i2c_reg"]], "fpga_reg": [[3, "module-fpga_reg"]], "get_dev_add() (in module i2c_reg)": [[3, "i2c_reg.get_dev_add"]], "i2c_reg": [[3, "module-i2c_reg"]], "power_off_tpm": [[3, "module-power_off_tpm"]], "power_on_tpm": [[3, "module-power_on_tpm"]], "usage_hexample (in module power_off_tpm)": [[3, "power_off_tpm.usage_hexample"]], "usage_hexample (in module power_on_tpm)": [[3, "power_on_tpm.usage_hexample"]], "api_version (class in subrack_hardware)": [[4, "subrack_hardware.API_Version"]], "abortcommand (class in hardwarethreadedclass)": [[4, "HardwareThreadedClass.AbortCommand"]], "aretpmsoncommand (class in subrack_hardware)": [[4, "subrack_hardware.AreTpmsOnCommand"]], "backplanetemperature (class in subrack_hardware)": [[4, "subrack_hardware.BackplaneTemperature"]], "boardcurrent (class in subrack_hardware)": [[4, "subrack_hardware.BoardCurrent"]], "boardtemperature (class in subrack_hardware)": [[4, "subrack_hardware.BoardTemperature"]], "cpld_pll_locked (class in subrack_hardware)": [[4, "subrack_hardware.CPLD_PLL_Locked"]], "fanmode (class in subrack_hardware)": [[4, "subrack_hardware.FanMode"]], "fanspeed (class in subrack_hardware)": [[4, "subrack_hardware.FanSpeed"]], "fanspeedpercent (class in subrack_hardware)": [[4, "subrack_hardware.FanSpeedPercent"]], "getallattributescommand (class in hardwarebaseclass)": [[4, "HardwareBaseClass.GetAllAttributesCommand"]], "gethealthdict (class in subrack_hardware)": [[4, "subrack_hardware.GetHealthDict"]], "gethealthstatus (class in subrack_hardware)": [[4, "subrack_hardware.GetHealthStatus"]], "hardwareattribute (class in hardwarebaseclass)": [[4, "HardwareBaseClass.HardwareAttribute"]], "hardwarebaseclass": [[4, "module-HardwareBaseClass"]], "hardwarebasedevice (class in hardwarebaseclass)": [[4, "HardwareBaseClass.HardwareBaseDevice"]], "hardwarecommand (class in hardwarebaseclass)": [[4, "HardwareBaseClass.HardwareCommand"]], "hardwarethreadedclass": [[4, "module-HardwareThreadedClass"]], "iscompletedcommand (class in hardwarethreadedclass)": [[4, "HardwareThreadedClass.IsCompletedCommand"]], "istpmoncommand (class in subrack_hardware)": [[4, "subrack_hardware.IsTpmOnCommand"]], "listattributecommand (class in hardwarebaseclass)": [[4, "HardwareBaseClass.ListAttributeCommand"]], "listcommandcommand (class in hardwarebaseclass)": [[4, "HardwareBaseClass.ListCommandCommand"]], "myserver (class in web_server)": [[4, "web_server.MyServer"]], "pscurrent (class in subrack_hardware)": [[4, "subrack_hardware.PSCurrent"]], "psfanspeed (class in subrack_hardware)": [[4, "subrack_hardware.PSFanSpeed"]], "pspower (class in subrack_hardware)": [[4, "subrack_hardware.PSPower"]], "psvoltage (class in subrack_hardware)": [[4, "subrack_hardware.PSVoltage"]], "powerdowncommand (class in subrack_hardware)": [[4, "subrack_hardware.PowerDownCommand"]], "powerofftpmcommand (class in subrack_hardware)": [[4, "subrack_hardware.PowerOffTpmCommand"]], "powerontpmcommand (class in subrack_hardware)": [[4, "subrack_hardware.PowerOnTpmCommand"]], "powerupcommand (class in subrack_hardware)": [[4, "subrack_hardware.PowerUpCommand"]], "setfanmode (class in subrack_hardware)": [[4, "subrack_hardware.SetFanMode"]], "setfanspeed (class in subrack_hardware)": [[4, "subrack_hardware.SetFanSpeed"]], "setpsfanspeed (class in subrack_hardware)": [[4, "subrack_hardware.SetPSFanSpeed"]], "subrackhardware (class in subrack_hardware)": [[4, "subrack_hardware.SubrackHardware"]], "subrack_pll_locked (class in subrack_hardware)": [[4, "subrack_hardware.Subrack_PLL_Locked"]], "subrack_timestamp (class in subrack_hardware)": [[4, "subrack_hardware.Subrack_Timestamp"]], "tpm_add_list (class in subrack_hardware)": [[4, "subrack_hardware.TPM_Add_List"]], "tpm_temperature_alarms (class in subrack_hardware)": [[4, "subrack_hardware.TPM_Temperature_Alarms"]], "tpm_temperatures (class in subrack_hardware)": [[4, "subrack_hardware.TPM_Temperatures"]], "tpm_voltage_alarms (class in subrack_hardware)": [[4, "subrack_hardware.TPM_Voltage_Alarms"]], "threadedhardwarecommand (class in hardwarethreadedclass)": [[4, "HardwareThreadedClass.ThreadedHardwareCommand"]], "tpmcurrents (class in subrack_hardware)": [[4, "subrack_hardware.TpmCurrents"]], "tpmips (class in subrack_hardware)": [[4, "subrack_hardware.TpmIPs"]], "tpminfo (class in subrack_hardware)": [[4, "subrack_hardware.TpmInfo"]], "tpmmcutemperatures (class in subrack_hardware)": [[4, "subrack_hardware.TpmMCUTemperatures"]], "tpmonoffvect (class in subrack_hardware)": [[4, "subrack_hardware.TpmOnOffVect"]], "tpmpowers (class in subrack_hardware)": [[4, "subrack_hardware.TpmPowers"]], "tpmpresent (class in subrack_hardware)": [[4, "subrack_hardware.TpmPresent"]], "tpmsupplyfault (class in subrack_hardware)": [[4, "subrack_hardware.TpmSupplyFault"]], "tpmvoltages (class in subrack_hardware)": [[4, "subrack_hardware.TpmVoltages"]], "abort() (hardwarethreadedclass.threadedhardwarecommand method)": [[4, "HardwareThreadedClass.ThreadedHardwareCommand.abort"]], "add_attribute() (hardwarebaseclass.hardwarebasedevice method)": [[4, "HardwareBaseClass.HardwareBaseDevice.add_attribute"]], "add_command() (hardwarebaseclass.hardwarebasedevice method)": [[4, "HardwareBaseClass.HardwareBaseDevice.add_command"]], "byte_to_bool_array() (in module subrack_hardware)": [[4, "subrack_hardware.byte_to_bool_array"]], "completed() (hardwarethreadedclass.threadedhardwarecommand method)": [[4, "HardwareThreadedClass.ThreadedHardwareCommand.completed"]], "do() (hardwarebaseclass.getallattributescommand method)": [[4, "HardwareBaseClass.GetAllAttributesCommand.do"]], "do() (hardwarebaseclass.hardwarecommand method)": [[4, "HardwareBaseClass.HardwareCommand.do"]], "do() (hardwarebaseclass.listattributecommand method)": [[4, "HardwareBaseClass.ListAttributeCommand.do"]], "do() (hardwarebaseclass.listcommandcommand method)": [[4, "HardwareBaseClass.ListCommandCommand.do"]], "do() (hardwarethreadedclass.abortcommand method)": [[4, "HardwareThreadedClass.AbortCommand.do"]], "do() (hardwarethreadedclass.iscompletedcommand method)": [[4, "HardwareThreadedClass.IsCompletedCommand.do"]], "do() (hardwarethreadedclass.threadedhardwarecommand method)": [[4, "HardwareThreadedClass.ThreadedHardwareCommand.do"]], "do() (subrack_hardware.aretpmsoncommand method)": [[4, "subrack_hardware.AreTpmsOnCommand.do"]], "do() (subrack_hardware.gethealthdict method)": [[4, "subrack_hardware.GetHealthDict.do"]], "do() (subrack_hardware.gethealthstatus method)": [[4, "subrack_hardware.GetHealthStatus.do"]], "do() (subrack_hardware.istpmoncommand method)": [[4, "subrack_hardware.IsTpmOnCommand.do"]], "do() (subrack_hardware.setfanmode method)": [[4, "subrack_hardware.SetFanMode.do"]], "do() (subrack_hardware.setfanspeed method)": [[4, "subrack_hardware.SetFanSpeed.do"]], "do() (subrack_hardware.setpsfanspeed method)": [[4, "subrack_hardware.SetPSFanSpeed.do"]], "do() (subrack_hardware.tpminfo method)": [[4, "subrack_hardware.TpmInfo.do"]], "do_get() (web_server.myserver method)": [[4, "web_server.MyServer.do_GET"]], "execute_command() (hardwarebaseclass.hardwarebasedevice method)": [[4, "HardwareBaseClass.HardwareBaseDevice.execute_command"]], "execute_command() (subrack_hardware.subrackhardware method)": [[4, "subrack_hardware.SubrackHardware.execute_command"]], "get_attribute() (hardwarebaseclass.hardwarebasedevice method)": [[4, "HardwareBaseClass.HardwareBaseDevice.get_attribute"]], "initialize() (subrack_hardware.subrackhardware method)": [[4, "subrack_hardware.SubrackHardware.initialize"]], "is_blocking() (hardwarethreadedclass.threadedhardwarecommand method)": [[4, "HardwareThreadedClass.ThreadedHardwareCommand.is_blocking"]], "mangle_dict() (in module web_server)": [[4, "web_server.mangle_dict"]], "name() (hardwarebaseclass.hardwareattribute method)": [[4, "HardwareBaseClass.HardwareAttribute.name"]], "name() (hardwarebaseclass.hardwarecommand method)": [[4, "HardwareBaseClass.HardwareCommand.name"]], "read() (hardwarebaseclass.hardwareattribute method)": [[4, "HardwareBaseClass.HardwareAttribute.read"]], "read_value() (hardwarebaseclass.hardwareattribute method)": [[4, "HardwareBaseClass.HardwareAttribute.read_value"]], "read_value() (subrack_hardware.api_version method)": [[4, "subrack_hardware.API_Version.read_value"]], "read_value() (subrack_hardware.backplanetemperature method)": [[4, "subrack_hardware.BackplaneTemperature.read_value"]], "read_value() (subrack_hardware.boardcurrent method)": [[4, "subrack_hardware.BoardCurrent.read_value"]], "read_value() (subrack_hardware.boardtemperature method)": [[4, "subrack_hardware.BoardTemperature.read_value"]], "read_value() (subrack_hardware.cpld_pll_locked method)": [[4, "subrack_hardware.CPLD_PLL_Locked.read_value"]], "read_value() (subrack_hardware.fanmode method)": [[4, "subrack_hardware.FanMode.read_value"]], "read_value() (subrack_hardware.fanspeed method)": [[4, "subrack_hardware.FanSpeed.read_value"]], "read_value() (subrack_hardware.fanspeedpercent method)": [[4, "subrack_hardware.FanSpeedPercent.read_value"]], "read_value() (subrack_hardware.pscurrent method)": [[4, "subrack_hardware.PSCurrent.read_value"]], "read_value() (subrack_hardware.psfanspeed method)": [[4, "subrack_hardware.PSFanSpeed.read_value"]], "read_value() (subrack_hardware.pspower method)": [[4, "subrack_hardware.PSPower.read_value"]], "read_value() (subrack_hardware.psvoltage method)": [[4, "subrack_hardware.PSVoltage.read_value"]], "read_value() (subrack_hardware.subrack_pll_locked method)": [[4, "subrack_hardware.Subrack_PLL_Locked.read_value"]], "read_value() (subrack_hardware.subrack_timestamp method)": [[4, "subrack_hardware.Subrack_Timestamp.read_value"]], "read_value() (subrack_hardware.tpm_add_list method)": [[4, "subrack_hardware.TPM_Add_List.read_value"]], "read_value() (subrack_hardware.tpm_temperature_alarms method)": [[4, "subrack_hardware.TPM_Temperature_Alarms.read_value"]], "read_value() (subrack_hardware.tpm_temperatures method)": [[4, "subrack_hardware.TPM_Temperatures.read_value"]], "read_value() (subrack_hardware.tpm_voltage_alarms method)": [[4, "subrack_hardware.TPM_Voltage_Alarms.read_value"]], "read_value() (subrack_hardware.tpmcurrents method)": [[4, "subrack_hardware.TpmCurrents.read_value"]], "read_value() (subrack_hardware.tpmips method)": [[4, "subrack_hardware.TpmIPs.read_value"]], "read_value() (subrack_hardware.tpmmcutemperatures method)": [[4, "subrack_hardware.TpmMCUTemperatures.read_value"]], "read_value() (subrack_hardware.tpmonoffvect method)": [[4, "subrack_hardware.TpmOnOffVect.read_value"]], "read_value() (subrack_hardware.tpmpowers method)": [[4, "subrack_hardware.TpmPowers.read_value"]], "read_value() (subrack_hardware.tpmpresent method)": [[4, "subrack_hardware.TpmPresent.read_value"]], "read_value() (subrack_hardware.tpmsupplyfault method)": [[4, "subrack_hardware.TpmSupplyFault.read_value"]], "read_value() (subrack_hardware.tpmvoltages method)": [[4, "subrack_hardware.TpmVoltages.read_value"]], "read_value() (subrack_hardware.ups_status method)": [[4, "subrack_hardware.ups_status.read_value"]], "set_attribute() (hardwarebaseclass.hardwarebasedevice method)": [[4, "HardwareBaseClass.HardwareBaseDevice.set_attribute"]], "subrack_hardware": [[4, "module-subrack_hardware"]], "thread() (hardwarethreadedclass.threadedhardwarecommand method)": [[4, "HardwareThreadedClass.ThreadedHardwareCommand.thread"]], "thread() (subrack_hardware.powerdowncommand method)": [[4, "subrack_hardware.PowerDownCommand.thread"]], "thread() (subrack_hardware.powerofftpmcommand method)": [[4, "subrack_hardware.PowerOffTpmCommand.thread"]], "thread() (subrack_hardware.powerontpmcommand method)": [[4, "subrack_hardware.PowerOnTpmCommand.thread"]], "thread() (subrack_hardware.powerupcommand method)": [[4, "subrack_hardware.PowerUpCommand.thread"]], "ups_status (class in subrack_hardware)": [[4, "subrack_hardware.ups_status"]], "web_server": [[4, "module-web_server"]], "write() (hardwarebaseclass.hardwareattribute method)": [[4, "HardwareBaseClass.HardwareAttribute.write"]], "write_value() (hardwarebaseclass.hardwareattribute method)": [[4, "HardwareBaseClass.HardwareAttribute.write_value"]], "write_value() (subrack_hardware.fanmode method)": [[4, "subrack_hardware.FanMode.write_value"]]}})